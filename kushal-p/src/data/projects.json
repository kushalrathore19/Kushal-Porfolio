[
  {
    "id": "ai-chatbot",
    "title": "AI-Powered Customer Support Chatbot",
    "description": "Built an intelligent chatbot using NLP and machine learning to handle customer queries with 95% accuracy.",
    "image": "/projects/chatbot-preview.jpg",
    "tags": ["Python", "NLP", "TensorFlow", "REST API", "React"],
    "stack": ["Python", "TensorFlow", "FastAPI", "React", "PostgreSQL"],
    "featured": true,
    "problem": "Customer support teams were overwhelmed with repetitive queries, leading to long response times and decreased satisfaction.",
    "approach": "Developed a context-aware chatbot using transformer models, integrated with existing CRM systems, and implemented continuous learning from interactions.",
    "impact": "Reduced response time by 80%, handled 70% of queries automatically, and improved customer satisfaction score from 3.2 to 4.6.",
    "liveUrl": "https://chatbot-demo.com",
    "githubUrl": "https://github.com/kushal/ai-chatbot",
    "caseStudyUrl": "/case-studies/ai-chatbot"
  },
  {
    "id": "data-pipeline",
    "title": "Real-time Data Pipeline for E-commerce",
    "description": "Designed and implemented a scalable data pipeline processing 1M+ transactions daily for real-time analytics.",
    "image": "/projects/pipeline-preview.jpg",
    "tags": ["Python", "Apache Kafka", "Docker", "AWS", "SQL"],
    "stack": ["Python", "Apache Kafka", "Docker", "AWS Lambda", "PostgreSQL"],
    "featured": true,
    "problem": "E-commerce platform needed real-time insights from transaction data to optimize inventory and detect fraud.",
    "approach": "Built a microservices-based data pipeline using Kafka for streaming, containerized with Docker, and deployed on AWS with auto-scaling.",
    "impact": "Processed 1M+ daily transactions with <100ms latency, detected fraud 3x faster, and reduced infrastructure costs by 40%.",
    "githubUrl": "https://github.com/kushal/data-pipeline",
    "caseStudyUrl": "/case-studies/data-pipeline"
  },
  {
    "id": "ml-recommendation",
    "title": "Machine Learning Recommendation Engine",
    "description": "Created a personalized recommendation system that increased user engagement by 35% using collaborative filtering.",
    "image": "/projects/recommendation-preview.jpg",
    "tags": ["Python", "Scikit-learn", "Pandas", "Redis", "API"],
    "stack": ["Python", "Scikit-learn", "Pandas", "Redis", "Flask"],
    "featured": true,
    "problem": "Users were struggling to discover relevant content, leading to low engagement and high churn rates.",
    "approach": "Implemented hybrid recommendation system combining collaborative filtering and content-based methods with real-time scoring.",
    "impact": "Increased user engagement by 35%, reduced churn by 25%, and generated $2M additional revenue in 6 months.",
    "githubUrl": "https://github.com/kushal/ml-recommendations",
    "caseStudyUrl": "/case-studies/ml-recommendation"
  },
  {
    "id": "computer-vision",
    "title": "Computer Vision Quality Control System",
    "description": "Automated quality control in manufacturing using computer vision, reducing defect detection time by 90%.",
    "image": "/projects/vision-preview.jpg",
    "tags": ["Python", "OpenCV", "PyTorch", "IoT", "Manufacturing"],
    "stack": ["Python", "PyTorch", "OpenCV", "Raspberry Pi", "MQTT"],
    "featured": false,
    "problem": "Manual quality inspection was slow, inconsistent, and prone to human error in manufacturing processes.",
    "approach": "Developed CNN-based defect detection system with edge computing deployment and real-time alerting.",
    "impact": "Reduced inspection time by 90%, improved defect detection accuracy to 98%, and saved $500K annually in quality costs.",
    "githubUrl": "https://github.com/kushal/cv-quality-control"
  },
  {
    "id": "nlp-sentiment",
    "title": "Multi-language Sentiment Analysis API",
    "description": "Built a REST API for sentiment analysis supporting 15 languages with 94% accuracy across domains.",
    "image": "/projects/sentiment-preview.jpg",
    "tags": ["Python", "BERT", "FastAPI", "Docker", "Multi-language"],
    "stack": ["Python", "Transformers", "FastAPI", "Docker", "Redis"],
    "featured": false,
    "problem": "Businesses needed to analyze customer feedback in multiple languages but existing tools were language-specific.",
    "approach": "Fine-tuned multilingual BERT models for domain-specific sentiment analysis with caching and rate limiting.",
    "impact": "Achieved 94% accuracy across 15 languages, processed 100K+ requests daily, and enabled global sentiment monitoring.",
    "liveUrl": "https://sentiment-api.com",
    "githubUrl": "https://github.com/kushal/nlp-sentiment"
  },
  {
    "id": "blockchain-analytics",
    "title": "Blockchain Transaction Analytics Platform",
    "description": "Created a platform for analyzing blockchain transactions to detect patterns and anomalies in DeFi protocols.",
    "image": "/projects/blockchain-preview.jpg",
    "tags": ["Python", "Web3", "Graph Theory", "Analytics", "DeFi"],
    "stack": ["Python", "Web3.py", "NetworkX", "FastAPI", "PostgreSQL"],
    "featured": false,
    "problem": "DeFi protocols needed better tools to understand transaction patterns and detect suspicious activities.",
    "approach": "Built graph-based analysis system to map transaction flows and identify anomalies using machine learning.",
    "impact": "Detected 95% of suspicious transactions, analyzed 50M+ transactions, and helped secure $100M+ in DeFi assets.",
    "githubUrl": "https://github.com/kushal/blockchain-analytics"
  }
]